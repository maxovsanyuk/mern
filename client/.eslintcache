[{"/home/ubuntu/mern/client/src/index.js":"1","/home/ubuntu/mern/client/src/App.js":"2","/home/ubuntu/mern/client/src/reportWebVitals.js":"3","/home/ubuntu/mern/client/src/routes.js":"4","/home/ubuntu/mern/client/src/hooks/auth.hook.js":"5","/home/ubuntu/mern/client/src/Components/NavBar.js":"6","/home/ubuntu/mern/client/src/context/AuthContext.js":"7","/home/ubuntu/mern/client/src/Components/Loader.js":"8","/home/ubuntu/mern/client/src/pages/CreatePage.js":"9","/home/ubuntu/mern/client/src/pages/LinksPage.js":"10","/home/ubuntu/mern/client/src/pages/DetailPage.js":"11","/home/ubuntu/mern/client/src/pages/AuthPage.js":"12","/home/ubuntu/mern/client/src/hooks/http.hook.js":"13"},{"size":500,"mtime":1608999621454,"results":"14","hashOfConfig":"15"},{"size":905,"mtime":1608999621450,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608999621454,"results":"17","hashOfConfig":"15"},{"size":744,"mtime":1608999621454,"results":"18","hashOfConfig":"15"},{"size":883,"mtime":1608999621454,"results":"19","hashOfConfig":"15"},{"size":1938,"mtime":1608999621450,"results":"20","hashOfConfig":"15"},{"size":198,"mtime":1608999621454,"results":"21","hashOfConfig":"15"},{"size":607,"mtime":1608999621450,"results":"22","hashOfConfig":"15"},{"size":1312,"mtime":1608999621454,"results":"23","hashOfConfig":"15"},{"size":2335,"mtime":1608999621454,"results":"24","hashOfConfig":"15"},{"size":1764,"mtime":1608999621454,"results":"25","hashOfConfig":"15"},{"size":2805,"mtime":1608999621454,"results":"26","hashOfConfig":"15"},{"size":964,"mtime":1608999621454,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"qir5zv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/home/ubuntu/mern/client/src/index.js",[],["59","60"],"/home/ubuntu/mern/client/src/App.js",[],"/home/ubuntu/mern/client/src/reportWebVitals.js",[],"/home/ubuntu/mern/client/src/routes.js",[],"/home/ubuntu/mern/client/src/hooks/auth.hook.js",["61"],"import React, { useState, useCallback, useEffect } from \"react\";\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [userId, setUserId] = useState(null);\n\n  const storageName = \"userData\";\n\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n\n    localStorage.setItem(\n      storageName,\n      JSON.stringify({ userId: id, token: jwtToken })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(storageName);\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n    if (data) {\n      if (data && data.token) {\n        login(data.token, data.userId);\n      }\n    }\n    setReady(true);\n  }, [login]);\n\n  return { login, logout, token, userId, ready };\n};\n","/home/ubuntu/mern/client/src/Components/NavBar.js",[],"/home/ubuntu/mern/client/src/context/AuthContext.js",[],"/home/ubuntu/mern/client/src/Components/Loader.js",[],"/home/ubuntu/mern/client/src/pages/CreatePage.js",[],"/home/ubuntu/mern/client/src/pages/LinksPage.js",[],"/home/ubuntu/mern/client/src/pages/DetailPage.js",["62","63"],"import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport Loader from \"../Components/Loader\";\n\nimport styled from \"styled-components\";\n\nconst DetailBox = styled.div`\n  width: 100%;\n  height: available;\n`;\n\nexport const DetailPage = () => {\n  const { token } = useContext(AuthContext);\n  const { request, loading } = useHttp();\n  const [link, setLink] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n  const linkId = useParams().id;\n\n  const getLink = useCallback(async () => {\n    try {\n      const fetchedLink = await request(`/api/link/${linkId}`, \"GET\", null, {\n        Authorization: `Bearer ${token}`,\n      });\n\n      setLink(fetchedLink);\n    } catch (e) {}\n  }, [token, linkId, request]);\n\n  useEffect(() => {\n    getLink();\n  }, [getLink]);\n\n  useEffect(() => {\n    refresh && window.location.reload(false);\n  }, [refresh]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    link && (\n      <DetailBox>\n        <h2>Link</h2>\n        <p>\n          <div>\n            Your link:\n            <a\n              href={link.to}\n              target=\"_blank\"\n              useRef=\"noopener noreferrer\"\n              onClick={() => setRefresh(true)}\n            >\n              {link.to}\n            </a>\n          </div>\n          <div>\n            From:\n            <a href={link.from} target=\"_blank\" useRef=\"noopener noreferrer\">\n              {link.from}\n            </a>\n          </div>\n          <p>Date: {new Date(link.date).toLocaleDateString()}</p>\n          Links counter : <strong>{link.clicks}</strong>\n        </p>\n      </DetailBox>\n    )\n  );\n};\n","/home/ubuntu/mern/client/src/pages/AuthPage.js",["64","65","66"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHttp } from \"../hooks/http.hook\";\n\nimport get from \"lodash/get\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const AuthPage = () => {\n  const [alertMessage, setAlertMessage] = useState(null);\n  const auth = useContext(AuthContext);\n\n  const { loading, error, request, clearError } = useHttp();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const changesHandler = (event) => {\n    setForm({\n      ...form,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const loginHandler = async () => {\n    try {\n      const data = await request(\"/api/auth/login\", \"POST\", form);\n      data && setAlertMessage({ message: data.message, type: \"success\" });\n      data && setAlertMessage({ message: \"success login\", type: \"success\" });\n      auth.login(data?.token, data?.userId);\n    } catch (e) {}\n  };\n\n  const registerHandler = async () => {\n    try {\n      const data = await request(\"/api/auth/register\", \"POST\", form);\n      data && setAlertMessage({ message: data.message, type: \"success\" });\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    if (error) {\n      setAlertMessage({ message: error, type: \"warning\" });\n      setTimeout(() => {\n        clearError();\n      }, 1500);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    get(alertMessage, \"message\") &&\n      setTimeout(() => {\n        setAlertMessage({});\n      }, 1500);\n  }, [get(alertMessage, \"message\")]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <TextField\n        required\n        name=\"email\"\n        label=\"Email\"\n        variant=\"outlined\"\n        value={form.email}\n        style={{ margin: \"20px 0\", width: \"40%\" }}\n        onChange={changesHandler}\n      />\n      <TextField\n        required\n        name=\"password\"\n        variant=\"outlined\"\n        value={form.password}\n        label=\"Password\"\n        style={{ width: \"40%\" }}\n        onChange={changesHandler}\n      />\n\n      <div style={{ display: \"flex\", margin: \"30px 0 0 0 \" }}>\n        <Button disabled={loading} variant=\"contained\" onClick={loginHandler}>\n          Login\n        </Button>\n        <Button\n          disabled={loading}\n          onClick={registerHandler}\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ margin: \"0 0 0 20px\" }}\n        >\n          Registration\n        </Button>\n      </div>\n\n      {get(alertMessage, \"message\") && (\n        <Alert severity={alertMessage?.type}>{alertMessage?.message}</Alert>\n      )}\n    </div>\n  );\n};\n","/home/ubuntu/mern/client/src/hooks/http.hook.js",["67"],"import React, { useCallback, useState } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setLoading(true);\n      try {\n        if (body) {\n          body = JSON.stringify(body);\n          headers[\"Content-Type\"] = \"application/json\";\n        }\n\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n        });\n\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(data.message || \"Somthing went wrong\");\n        }\n\n        setLoading(false);\n\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = () => setError(null);\n\n  return { loading, request, error, clearError };\n};\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":52,"column":15,"nodeType":"78","endLine":52,"endColumn":30},{"ruleId":"76","severity":1,"message":"77","line":61,"column":33,"nodeType":"78","endLine":61,"endColumn":48},{"ruleId":"79","severity":1,"message":"80","line":50,"column":6,"nodeType":"81","endLine":50,"endColumn":13,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":57,"column":6,"nodeType":"81","endLine":57,"endColumn":36,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":57,"column":7,"nodeType":"86","endLine":57,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'alertMessage'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [clearError, error]",{"range":"95","text":"96"},"Update the dependencies array to be: [alertMessage]",{"range":"97","text":"98"},[1459,1466],"[clearError, error]",[1601,1631],"[alertMessage]"]